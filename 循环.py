#---------------------------------------------------------------

"""
while 条件:
    条件成立要重复执行的代码
    ......
"""
i = 1
while i <= 5:
    print('gerat')
    i += 1  # i = i + 1


#---------------------------------------------------------------

# 准备数据
i = 1

# 结果变量
result = 0

# 循环
while i <= 100:
    # 加法运算 前两个数的结果 + 第三个数 -- 每计算一次加法则更新一次result变量值
    result = result + i
    i += 1

# 打印最终结果
print(result)

#---------------------------------------------------------------

i = 1
result = 0
while i <= 100:
    # 条件语句 -- if
    if i % 2 == 0:
        # 加法运算
        result += i
    i += 1

# 输出结果
print(result)

#---------------------------------------------------------------

i = 2
result = 0
while i <= 100:
    result += i
    i += 2

print(result)

#---------------------------------------------------------------

#break语句
i = 1
while i <= 5:
    # 条件：如果吃到4 或 > 3 打印吃饱了不吃了
    if i == 4:
        print('吃饱了，不吃了')
        break
    print(f'吃了第{i}个苹果')
    i += 1

#---------------------------------------------------------------

#continue语句
i = 1
while i <= 5:
    # 条件
    if i == 3:
        print('吃出一个大虫子，这个苹果不吃了')
        # 如果使用continue，在continue之前一定要修改计数器，否则进入死循环
        i += 1
        continue
    print(f'吃了第{i}个苹果')
    i += 1

#---------------------------------------------------------------

#while嵌套
j = 0
while j < 3:
    i = 0
    while i < 3:
        print('嘤嘤嘤')
        i += 1
    print('嘟嘟嘟')
    j += 1

#外层循环执行3次，而内层循环在每次外层循环中循环三次

#---------------------------------------------------------------

#打印星星（正方形星星块）
j = 0
while j < 5:
    # 一行星星开始
    i = 0
    #二次重新赋值，用于标识
    while i < 5:
        print('*', end='')
        #此处和之前知识点类似
        # print默认end为/n，即为换行，因此print()单独出现通常用于换行
        #我们可以人为定义end，此处使用''，即使用空格代替了/n，即此处不换行，而是在输出后加上一个空格
        #print()与print(,end='\n')是同等效应
        i += 1
    # 一行星星结束：换行显示下一行
    print()
    j += 1
#依旧是内外层均执行5次，因为内层循环并不依赖于外层循环

#---------------------------------------------------------------

#三角形星星
j = 0
while j < 5:
    # 一行星星开始
    i = 0
    while i <= j:
        print('*', end='')
        i += 1
    # 一行星星结束：换行显示下一行
    print()
    j += 1

#---------------------------------------------------------------

#九九乘法表
j = 1
while j <= 9:
    # 一行的表达式开始
    i = 1
    while i <= j:
        print(f'{i} * {j} = {i*j}', end='\t')
        i += 1
    # 一行的表达式结束
    print()
    j += 1

#---------------------------------------------------------------

#字符串输出
str1 = 'lalalalalalala'
for i in str1:
    print(i)

#for循环并没有方向限制，二维数组也和方向无关
#大部分语言均默认，输出后换行，仅仅区别于语法

#---------------------------------------------------------------

str1 = 'yingyingying'
for i in str1:
    # 当某些条件成立退出循环 -- break：条件 i取到字符e
    if i == 'e':
        break
    print(i)

#break语句用于终止本循环

#---------------------------------------------------------------

str1 = 'itheima'
for i in str1:
    # 当某些条件成立退出循环 -- continue：条件 i取到字符e
    if i == 'e':
        continue
    print(i)

#continue用于终止当前循环，仅一次循环

#---------------------------------------------------------------

#循环正常结束要执行的代码 -- else
i = 1
while i <= 5:
    print('嘤嘤嘤')
    i += 1
else:
    print('哈哈哈哈')

#---------------------------------------------------------------

i = 1
while i <= 5:
    if i == 3:
        break
    print('嘟嘟')
    i += 1
else:
    print('哈哈哈哈')

#---------------------------------------------------------------

i = 1
while i <= 5:
    if i == 3:
        i += 1
        #必要
        continue
    print('嘤嘤嘤')
    i += 1
else:
    print('嘟嘟')
#continue区别于break，因为break直接退出，而continue如果不对标识符++，会造成死循环


#---------------------------------------------------------------

str1 = '嘤嘤嘤'
for i in str1:
    print(i)
else:
    print('嘟嘟')

#---------------------------------------------------------------

str1 = '嘟嘟嘟'
for i in str1:
    if i == 'e':
        # break
        continue
    print(i)
else:
    print('循环正常结束执行的else的代码')

#可以起到去除e的作用
