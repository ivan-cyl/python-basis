#-----------------------------------------------

# 需求：math模块下sqrt() 开平方计算
"""
1. 导入模块
2. 测试是否导入成功：调用该模块内的sqrt功能
"""
# 方法一：import 模块名; 模块名.功能
# import math
# print(math.sqrt(9))


# 方法二： from 模块名 import 功能1, 功能2...; 功能调用（不需要书写模块名.功能）
# from math import sqrt
# print(sqrt(9))


# 方法三：from 模块名 import *; 功能调用（不需要书写模块名.功能）
from math import *
print(sqrt(9))

#-----------------------------------------------

# 需求： 运行后暂停2秒打印hello
"""
1. 导入time模块或导入time模块的sleep功能
2. 调用功能
3. 打印hello
"""

# 1. 模块别名
# import time as tt
# tt.sleep(2)
# time.sleep(2)
# print('hello')

# 2. 功能别名
from time import sleep as sl
sl(2)
print('hello')

#-----------------------------------------------

# 1. 导入模块
import my_module1

# 2. 调用功能
my_module1.testA(2, 2)

#-----------------------------------------------

# 1. 自己的文件名不能和已有模块名重复，如果重复导致模块无法使用 -- random
# import random
# num = random.randint(1, 5)
# print(num)


# 2. 当使用from xx import 功能 导入模块的功能的时候，如果功能名字重复，导入的时候后定义或后导入的这个同名功能
# 场景 time.sleep()
# def sleep():
#     print('我是自定义的sleep')
#
#
# from time import sleep
#
# # 定义函数 sleep
# # def sleep():
# #     print('我是自定义的sleep')
#
# sleep(2)


# 拓展： 名字重复
# 问题：import 模块名  是否担心 功能名字重复的问题  -- 不需要
import time
print(time)

time = 1
print(time)

# 问题：为什么变量也能覆盖模块？ -- 在Python语言中，数据是通过 引用 传递的。

#-----------------------------------------------

from my_module2 import *


testA()

# 因为testB函数没有添加到all列表，只有all列表里面的功能才能导入
# testB()


#-----------------------------------------------

# 方法一
"""
1. 导入
import 包名.模块名
2. 调用功能
包名.模块名.功能()
"""
# 导入package包下的模块1，使用这个模块内的info_print1函数
# import package.my_module1
# package.my_module1.info_print1()


# 方法二：注意 设置__init__.py文件里面的all列表，添加的是允许导入的模块
"""
from 包名 import *
模块名.目标
"""
from package import *
my_module1.info_print1()


#-----------------------------------------------



#-----------------------------------------------



#-----------------------------------------------


#-----------------------------------------------



#-----------------------------------------------



#-----------------------------------------------


#-----------------------------------------------



#-----------------------------------------------



#-----------------------------------------------



#-----------------------------------------------



#-----------------------------------------------



#-----------------------------------------------


#-----------------------------------------------



#-----------------------------------------------



#-----------------------------------------------



#-----------------------------------------------


#-----------------------------------------------



#-----------------------------------------------



#-----------------------------------------------


#-----------------------------------------------



#-----------------------------------------------



#-----------------------------------------------


#-----------------------------------------------



#-----------------------------------------------



#-----------------------------------------------